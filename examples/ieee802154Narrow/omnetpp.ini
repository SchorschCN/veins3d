[General]
cmdenv-config-name = 
cmdenv-event-banners = true
cmdenv-module-messages = true

cmdenv-runs-to-execute = 
ned-path = ../../base;../../modules;../../examples;
network = csmaTestSim

sim-time-limit = 100s


##########################################################
#			Simulation parameters                        #
##########################################################
tkenv-default-config = 
csmaTestSim.**.coreDebug = false
csmaTestSim.playgroundSizeX = 100m
csmaTestSim.playgroundSizeY = 100m
csmaTestSim.playgroundSizeZ = 300m
csmaTestSim.numHosts = 3

##########################################################
#			WorldUtility parameters                      #
##########################################################
csmaTestSim.world.useTorus = false
csmaTestSim.world.use2D = true

##########################################################
#			         channel parameters                  #
##########################################################
csmaTestSim.connectionManager.sendDirect = false
csmaTestSim.connectionManager.pMax = 1.1mW
csmaTestSim.connectionManager.sat = -100dBm
csmaTestSim.connectionManager.alpha = 2.5
csmaTestSim.connectionManager.carrierFrequency = 2.4E+9Hz

################ PhyLayer parameters #####################
csmaTestSim.node[*].nic.phy.usePropagationDelay = false
 
csmaTestSim.node[*].nic.phy.analogueModels = xmldoc("config.xml")
#csmaTestSim.node[*].nic.phy.decider = xmldoc("config.xml")
csmaTestSim.node[*].nic.phy.sensitivity = -100dBm
csmaTestSim.node[*].nic.phy.maxTXPower = 1.1mW
csmaTestSim.node[*].nic.phy.initialRadioState = 0
csmaTestSim.node[*].nic.phy.useThermalNoise = true


################ MAC layer parameters ####################
csmaTestSim.node[*].nic.mac.txPower = 1mW  # [mW]
csmaTestSim.node[*].nic.mac.notAffectedByHostState = true
csmaTestSim.node[*].nic.mac.macMinBE = 1
csmaTestSim.node[*].nic.mac.macMaxBE = 6
csmaTestSim.node[*].nic.mac.macMaxCSMABackoffs = 20
csmaTestSim.node[*].nic.mac.macAckWaitDuration = 0.000864s
csmaTestSim.node[*].nic.mac.aUnitBackoffPeriod = 0.02s

################ NETW layer parameters ####################


################ Mobility parameters #####################

csmaTestSim.node[0].mobility.x = 200	
csmaTestSim.node[0].mobility.y = 300
csmaTestSim.node[0].mobility.z = 100

csmaTestSim.node[1].mobility.x = 300	
csmaTestSim.node[1].mobility.y = 300
csmaTestSim.node[1].mobility.z = 100

csmaTestSim.node[2].mobility.x = 400	
csmaTestSim.node[2].mobility.y = 300
csmaTestSim.node[2].mobility.z = 100

csmaTestSim.node[*].mobility.debug = false
csmaTestSim.node[*].mobility.speed = 0
csmaTestSim.node[*].mobility.updateInterval = 0.5s
csmaTestSim.node[*].mobility.angle = 0
csmaTestSim.node[*].mobility.acceleration = 0

csmaTestSim.node[*].appl.debug = false
csmaTestSim.node[*].appl.packetLength = 24880bit
**.appl.packetTime = 0.1s
**.appl.packetsPerPacketTime = 0.15

csmaTestSim.world.bitrate = 250000

**.battery.debug = false
**.battery.nominal = 99999mAh
**.battery.capacity = 99999mAh
**.battery.voltage = 3.3V
**.battery.resolution = 0.1s
**.battery.publishDelta = 1
**.battery.publishTime = 0
**.battery.numDevices = 1

**.batteryStats.debug = false
**.batteryStats.detail = false
**.batteryStats.timeSeries = false


#################################################
# Test 1
# these tests produce the usage statistics of the channel
# for different configurations. Usage statistics means
# how much of the channels possible maximum capacity is
# used at which amount of generated traffic.
# 
# The results of this tests are visualized by "Test1.anf"
# and show plots of the generated traffic against the received
# traffic where both values are normalized against bitrate
# and simulation time.
##################################################
[Config Test1-A]
description = "increasing number of hosts, unbursted, with queue"
csmaTestSim.playgroundSizeX = 10m
csmaTestSim.playgroundSizeY = 10m
csmaTestSim.numHosts = ${2..20 step 1}
csmaTestSim.node[*].mobility.x = -1
csmaTestSim.node[*].mobility.y = -1
csmaTestSim.node[*].mobility.z = -1
**.appl.packetsPerPacketTime = 0.1

[Config Test1-B]
description = "increasing send rate per host, unbursted, with queue"
csmaTestSim.playgroundSizeX = 10m
csmaTestSim.playgroundSizeY = 10m
csmaTestSim.numHosts = 10
csmaTestSim.node[*].mobility.x = -1
csmaTestSim.node[*].mobility.y = -1
csmaTestSim.node[*].mobility.z = -1
**.appl.packetsPerPacketTime = ${0.02..0.2 step 0.01}
**.appl.burstSize = 1
**.mac.queueLength = 100

[Config Test1-C]
extends = Test1-B
description = "increasing send rate per host, bursted, with queue"
**.appl.burstSize = 3

[Config Test1-D]
extends = Test1-C
description = "increasing send rate per host, bursted, without queue"
**.mac.queueLength = 0

[Config Test1-E]
extends = Test1-B
description = "increasing send rate per host, unbursted, without queue"
**.mac.queueLength = 0


##################################################
# Test 2
# These test configurations are meant to show the effect
# of MAC-ACKS on the usage of the channel with increasing
# distance between the hosts.
# Test2-C further shows the effect of the hidden station
# problem on CSMA.
#
# The results can be visualized by "Test2.anf" and show
# plots of channel usage at different distances.
##################################################
[Config Test2-A]
description = "one sending host moving towards sink, with mac-acks"
sim-time-limit = 300s
csmaTestSim.playgroundSizeX = 500m
csmaTestSim.playgroundSizeY = 500m
csmaTestSim.numHosts = 2
csmaTestSim.node[0].mobility.x = 250
csmaTestSim.node[0].mobility.y = 250
csmaTestSim.node[1].mobility.x = 250 - ${dist=40..220 step 5}#${dist=40..160 step 40, 180..220 step 2, 230,240}
csmaTestSim.node[1].mobility.y = 250

csmaTestSim.node[0].appl.burstSize = 0
csmaTestSim.node[1].appl.burstSize = 1
csmaTestSim.node[1].appl.destination = 12
**.appl.packetsPerPacketTime = 0.25

csmaTestSim.world.bcTraffic = false

[Config Test2-B]
extends = Test2-A
description = "one sending host moving towards sink, without mac-acks"
csmaTestSim.node[1].appl.destination = 12
csmaTestSim.node*.nic.mac.useMACAcks = false
csmaTestSim.world.bcTraffic = false

[Config Test2-C]
extends = Test2-A
description = "one sending host stationary in range of sink (hidden station), \
			   one host moving towards sink and stationary sender,\
			   with mac ACKS"
csmaTestSim.numHosts = 3
**.appl.packetsPerPacketTime = 0.125
csmaTestSim.node[2].mobility.x = 380
csmaTestSim.node[2].mobility.y = 250
csmaTestSim.node[2].appl.burstSize = 1
csmaTestSim.node[2].appl.destination = 13
csmaTestSim.node[1].appl.destination = 13

######################################################
# Test 3
# This tests is meant to show that CSMA uses exponential backoffs.
# This is done by increasing the number of hosts in the network exponentially.
# While the average backoff duration of each hosts should increase
# exponentially, the average number of backoffs should increase linearly.
#
# The results of this tests are visualized by "Test3.anf".
######################################################
[Config Test3]
description = "quadratic increasing number of hosts results in linear increase of backoffs"
sim-time-limit = ${numHosts}s
csmaTestSim.playgroundSizeX = 10m
csmaTestSim.playgroundSizeY = 10m
csmaTestSim.numHosts = ${numHosts=2,4,8,16,32,64,128,256}
csmaTestSim.node[*].mobility.x = -1
csmaTestSim.node[*].mobility.y = -1
csmaTestSim.node[*].mobility.z = -1
**.appl.packetsPerPacketTime = 1/${numHosts}
csmaTestSim.node[*].nic.mac.macMinBE = 1
csmaTestSim.node[*].nic.mac.macMaxBE = 8
csmaTestSim.node[*].nic.mac.macMaxCSMABackoffs = 20
csmaTestSim.node[*].nic.mac.aUnitBackoffPeriod = 0.1s
csmaTestSim.connectionManager.sendDirect = true
**.appl.burstSize = 2
