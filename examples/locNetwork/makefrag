NEED = $(TARGET) bin/PositifScenario bin/RandomScenario bin/ChaosScenario
all: $(NEED)

SCEN=mfExample
SCEN_DIR=input/scenarios

omnetpp.ini: bin/positifgen.sh bin/util.sh $(SCEN_DIR)/$(SCEN) bin/PositifScenario input/ini/omnetpp.header input/ini/omnetpp.in
	bin/positifgen.sh $(SCEN) omnetpp.ini

src/Scenario.o: src/Scenario.cc
	$(CXX) $(NEDCOPTS) -c $< -o $@

bin/PositifScenario: src/PositifScenario.cc src/Scenario.o
	$(CXX) $(NEDCOPTS) src/Scenario.o src/PositifScenario.cc -o $@

bin/RandomScenario: src/RandomScenario.cc src/Scenario.o
	$(CXX) $(NEDCOPTS) src/Scenario.o src/RandomScenario.cc -o $@

bin/ChaosScenario: src/ChaosScenario.cc src/Scenario.o
	$(CXX) $(NEDCOPTS) src/Scenario.o src/ChaosScenario.cc -o $@

rebuild:
	(cd ../..;./mkmk locNetwork)
	$(MAKE) re-makemake

modules:
	$(MAKE) -C ../../ modules

base:
	$(MAKE) -C ../../ base

debug: $(NEED)
	gdb $(TARGET)

run: $(NEED)
	./$(TARGET) > output.stdout.txt 2> output.stderr.txt

valgrind: $(NEED)
	valgrind --show-reachable=yes --log-fd=1 --leak-check=full ./$(TARGET) 2>&1 >valgrind.log
