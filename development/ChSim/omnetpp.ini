## ChSim - omnetpp.ini

# values in this file overide all other values set here, 
# it is changed via external wrapper script run_ChSim.sh
#include factors.ini

[General]
network = msMovementCell
ini-warnings = false
total-stack-kb = 10000

# select the rng class, with automatic seed selection as default
rng-class="cMersenneTwister"	# default RNG of OMNeT with a period of 2^19937-1
#rng-class="cLCG32"		# old OMNeT RNG with a period of 2^31-2
#rng-class="cAkaroaRNG"		# Akaroa RNG

# manual seed selection
#seed-0-lcg32 = 1768107984

[Cmdenv]
event-banners = no

[Tkenv]
default-run = 1

[Parameters] 
#
# mobility model parameters
#
# mobility model to use
# 0 : Circular movement with constant distance to the basestation
# 1 : RandomWayPoint
# 2 : ManhattanGrid
msMovementCell.MobileStation[*].msBehavior.mobilityModel = 0

# all mobility models:
# mobile station speed in m/s impacts t-selectivity in channel model
# E.g. 'uniform(1,5)' for varying from 1m/s to 5m/s or '5' for a constant speed of 5m/s
# select individual value for a special terminal. Must be set bevor setting * value
#msMovementCell.MobileStation[*].msBehavior.speed = uniform(1,5)
#msMovementCell.MobileStation[0..1].msBehavior.speed = 50
msMovementCell.MobileStation[*].msBehavior.speed = 1

# manhattan grid & random waypoint:
# wait time between movements in seconds set to '0' for no movement or to any distribution supported by OMNeT
#msMovementCell.MobileStation[*].msBehavior.waitTime = uniform(1,5)
msMovementCell.MobileStation[*].msBehavior.waitTime = 0

# size of playground width in m, if using ManhattanGrid this schould be a multiple of gridSpacing
msMovementCell.playgroundSizeX = 100
# size of playground height in m, if using ManhattanGrid this schould be a multiple of gridSpacing
msMovementCell.playgroundSizeY = 100

# manhattan grid:
# fictive distance form one block to another in a manhattan like city
msMovementCell.MobileStation[*].msBehavior.gridSpacing = 10


#
# Network/scenario parameters
#
# no. of mobile stations (ms) in the network
msMovementCell.qty_ms = 1
# no. of channels of each ms
msMovementCell.qty_channels = 1


#
# channel model parameters
#
# no. of subbands for each channel
msMovementCell.subbands = 48
# select whether subbbands are fully correlated (1) or not (0)
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.correlated_subbands = 1
# f-selectivity: mean delay spread in seconds
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.delay_rms = 0.00000015
# Channel center frequency in Hz (subbands are centered around this frequency)
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.center_frequency = 5200000000
# bandwidth of each uncorrelated frequency band in Hz, i.e. total_signal_bandwidth/no_subcarriers
# E.g. for 802.11g OFDM subbands (including guard space & pilots): 20MHz/64=0.3125MHz
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.freq_spacing = 312500

# if 1 - path loss is calculated
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.calculatePathLoss = 0
# if 1 - shadowing loss is calculated
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.calculateShadowing = 0
# if 1 - fading loss is calculated
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.calculateFading = 1
# shadowing model: mean & std for lognormal distribution
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.mean = 0
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.std_dev = 5.8
# path loss model: exponent alpha and base
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.alpha = 2.4
#msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.tenlogk = 46.7
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.tenlogk = 0
# no. of simulated paths per channel
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.fadingPaths = 20

# speed of light in m/s
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.lightspeed = 299792458


#
# Sample generation & output control
#
# selects if values are calculated in logarithmic skale in dB (0) or linear (1), 
# precision should be increased if linear scale is used
msMovementCell.MobileStation[*].Channel[*].channelStateCalculator.use_linear_scale = 0
# how often channelState samples should be generated per second, e.g. 500 means every 2ms
msMovementCell.sample_per_sec = 500
# time to simulate in seconds
msMovementCell.max_time = 10


#
# Filewriter
#
# if 1 - traces are written
msMovementCell.FileWriter.writeFiles = 1
# how many positions after decimal point should be saved, 3 is a good choice for logarithmic scale, use 10 or higher for linear scaled values
msMovementCell.FileWriter.precision = 3
# memory size for filewriting buffer in Megabyte, 0.001Mb * J * C * S is enough
msMovementCell.FileWriter.mem_buf_size	= 1
# output directory for the generated files (moved to factors.ini)
msMovementCell.FileWriter.directory_name = "./traces"

# prefix for the generated files (moved to factors.ini)
msMovementCell.FileWriter.filename_prefix = "ChSim-v1"
